@using EcommerceWeb.Mvc.Models.Products
@using EcommerceWeb.Presentation.Common

@model Paginated<ProductVM>


<section class="bg0 p-t-24 p-b-140 " >
	<div class="container">

		<div class="p-b-10">
			<h5 class="ltext-103 cl5">
				Product List
			</h5>
		</div>

		@await Component.InvokeAsync("CategoryMenu")

		<div class="row isotope-grid">
			@foreach (var product in Model.Items)
			{
				<div class="col-sm-6 col-md-4 col-lg-3 p-b-35 isotope-item @product.Category.Name">
					<div class="block2">
						<div class="block2-pic hov-img0">
							<img src="~/images/product-06.jpg" alt="IMG-PRODUCT">

							<button data-product-id="123" class="block2-btn flex-c-m stext-103 cl2 size-102 bg0 bor2 hov-btn1 p-lr-15 trans-04 js-show-modal1 quick-view-btn">
								Quick View
							</button>
							@await Component.InvokeAsync("Quick", new { productId = product.Id })
						</div>

						<div class="block2-txt flex-w flex-t p-t-14">
							<div class="block2-txt-child1 flex-col-l ">
								<a asp-controller="Product" asp-action="Details" asp-route-id="@product.Id" class="stext-104 cl4 hov-cl1 trans-04 js-name-b2 p-b-6">
									@product.Name
								</a>
								<span class="stext-105 cl3">
									@product.Price $
								</span>
							</div>

							<div class="block2-txt-child2 flex-r p-t-3">
								<a href="#" class="btn-addwish-b2 dis-block pos-relative js-addwish-b2">
									<img class="icon-heart1 dis-block trans-04" src="~/images/icons/icon-heart-01.png" alt="ICON">
									<img class="icon-heart2 dis-block trans-04 ab-t-l" src="~/images/icons/icon-heart-02.png" alt="ICON">
								</a>
							</div>
						</div>
					</div>
				</div>
			}
		</div>

		<div class="flex-c-m flex-w w-full p-t-45">
			<nav aria-label="...">
				<ul class="pagination">
					@if (Model.HasPreviousPage is true)
					{
						<li class="page-item">
							<a asp-action="Index" asp-route-Page ="1" class="page-link">First</a>
						</li>
					}
					@if (Model.HasPreviousPage is true)
					{
						<li class="page-item">
							<a asp-action="Index" asp-route-Page="@(Model.Page -1)" class="page-link">Previous</a>
						</li>
					}
					@{
						int count = Model.TotalCount / Model.PageSize;
						if (Model.TotalCount %Model.PageSize != 0)
						{
							count++;
						}
					}
					@for (int i = 1; i <= count; i++)
					{
						<li class="page-item @(Model.Page == i ? "active" : "")">
							<a asp-action="Index" asp-route-Page="@i" class="page-link">@i</a>
						</li>
					}
					@if (Model.HasNextPage is true)
					{
						<li class="page-item">
							<a class="page-link" asp-action="Index" asp-route-Page="@(Model.Page +1)">Next</a>
						</li>
					}
					@if (Model.HasNextPage is true )
					{
						<li class="page-item">
							<a asp-action="Index" asp-route-Page="1" class="page-link">Last</a>
						</li>
					}

				</ul>
			</nav>
		</div>
	</div>
</section>

@* <script>
	document.addEventListener('DOMContentLoaded', function () {
		const quickViewButtons = document.querySelectorAll('.quick-view-btn');

		quickViewButtons.forEach(function (button) {
			button.addEventListener('click', function () {
				// Lấy giá trị của thuộc tính data-product-id
				const productId = button.getAttribute('data-product-id');

				// Sử dụng productId ở đây cho mục đích của bạn, ví dụ:
				console.log('Product ID:', productId);
			});
		});
	});
</script> *@